//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace StellarRoboEditor.Suggestion {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Suggestion {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Suggestion() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("StellarRoboEditor.Suggestion.Suggestion", typeof(Suggestion).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   app_active関数
        ///Class名、Windowタイトルがマッチしたアプリをアクティブにする
        ///
        ///構文
        ///int app_active(string ClassName, string WindowTitle)
        ///
        ///パラメタ
        ///ClassName
        ///タイプ：string
        ///アクティブにしたいアプリのClass名を指定
        ///
        ///WindowTitle
        ///タイプ：string
        ///アクティブにしたいアプリのWindowタイトルを指定
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string app_active {
            get {
                return ResourceManager.GetString("app_active", resourceCulture);
            }
        }
        
        /// <summary>
        ///   app_close関数
        ///Windowタイトルを指定し、マッチするアプリを閉じる
        ///
        ///構文
        ///int app_close(string WindowTitle)
        ///
        ///パラメタ
        ///WindowTitle
        ///タイプ：string
        ///閉じるアプリのWindowタイトルを指定
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string app_close {
            get {
                return ResourceManager.GetString("app_close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   app_open関数
        ///指定アプリを実行する
        ///
        ///構文
        ///int app_open(string FileName, int WindowStyle, int ExitsWait, int ExitsWaitTime)
        ///
        ///パラメタ
        ///FileName
        ///タイプ：string
        ///起動するアプリへのパス
        ///
        ///WindowStyle
        ///タイプ：int
        ///起動時のWindowスタイルを指定
        ///
        ///ExitsWait
        ///タイプ：int
        ///アプリが終了するまで、待つかを指定
        ///
        ///ExitsWaitTime
        ///タイプ：int
        ///アプリが終了する待つ時間を指定
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string app_open {
            get {
                return ResourceManager.GetString("app_open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   app_set_pos関数
        ///アプリの表示位置を指定する
        ///
        ///構文
        ///int app_set_pos(string ClassName, string WindowTitle, int Left, int Top, int Right, int Bottom)
        ///
        ///パラメタ
        ///ClassName
        ///タイプ：string
        ///表示位置を指定したいアプリのClass名を指定
        ///
        ///WindowTitle
        ///タイプ：string
        ///表示位置を指定したいアプリのWindowタイトルを指定
        ///
        ///Left
        ///タイプ：int
        ///表示位置を指定したいアプリのLeft値を指定
        ///
        ///Top
        ///タイプ：int
        ///表示位置を指定したいアプリのTop値を指定
        ///
        ///Right
        ///タイプ：int
        ///アプリのWidth値を指定
        ///
        ///Bottom
        ///タイプ：int
        ///アプリのHeight値を指定
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string app_set_pos {
            get {
                return ResourceManager.GetString("app_set_pos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   app_wait関数
        ///指定アプリが起動/終了まで待つ
        ///
        ///構文
        ///int app_wait(string WindowTitle, int State, int TimeOut)
        ///
        ///パラメタ
        ///WindowTitle
        ///タイプ：string
        ///起動/終了を待ちたいアプリのWindowタイトルを指定
        ///
        ///State
        ///タイプ：int
        ///待つ状態
        ///
        ///TimeOut
        ///タイプ：int
        ///最大待ち時間
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string app_wait {
            get {
                return ResourceManager.GetString("app_wait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   browser_change関数
        ///Browserの操作対象を変更する
        ///
        ///構文
        ///bool browser_change(string BrowserKeyName, string ChangeOwnerHandle)
        ///
        ///パラメタ
        ///BrowserKeyName
        ///タイプ：string
        ///browser_navigate関数で取得した戻り値
        ///
        ///ChangeOwnerHandle
        ///タイプ：string
        ///操作したいBrowser
        ///
        ///戻り値
        ///タイプ：bool
        ///項目が存在した場合、戻り値はTrueになります。それ以外の場合にはFalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string browser_change {
            get {
                return ResourceManager.GetString("browser_change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   browser_check_id関数
        ///Browserの指定項目の存在確認を行う。
        ///
        ///構文
        ///bool browser_check_id(string BrowserKeyName, string Element, int SearchType)
        ///
        ///パラメタ
        ///BrowserKeyName
        ///タイプ：string
        ///browser_navigate関数で取得した戻り値
        ///
        ///Element
        ///タイプ：string
        ///確認したい項目名
        ///
        ///SearchType
        ///タイプ：string
        ///項目検索タイプ
        ///
        ///戻り値
        ///タイプ：bool
        ///項目が存在した場合、戻り値はTrueになります。それ以外の場合にはFalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string browser_check_id {
            get {
                return ResourceManager.GetString("browser_check_id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   browser_click関数
        ///Browserの指定項目のクリックを行う
        ///
        ///構文
        ///int browser_click(string BrowserKeyName, string Element, int SearchType)
        ///
        ///パラメタ
        ///BrowserKeyName
        ///タイプ：string
        ///browser_navigate関数で取得した戻り値
        ///
        ///Element
        ///タイプ：string
        ///クリックを行いたい項目名
        ///
        ///SearchType
        ///タイプ：string
        ///項目検索タイプ
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string browser_click {
            get {
                return ResourceManager.GetString("browser_click", resourceCulture);
            }
        }
        
        /// <summary>
        ///   browser_close関数
        ///指定されたBrowserを閉じる
        ///
        ///構文
        ///int browser_close(string BrowserKeyName)
        ///
        ///パラメタ
        ///BrowserKeyName
        ///タイプ：string
        ///browser_navigate関数で取得した戻り値
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string browser_close {
            get {
                return ResourceManager.GetString("browser_close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   browser_get_coordinate関数
        ///Browserの指定項目の座標(top、left、width、height)を取得する
        ///
        ///構文
        ///int[] browser_get_coordinate(string BrowserKeyName, string Element, int SearchType)
        ///
        ///パラメタ
        ///BrowserKeyName
        ///タイプ：string
        ///browser_navigate関数で取得した戻り値
        ///
        ///Element
        ///タイプ：string
        ///座標を取得したい項目名
        ///
        ///SearchType
        ///タイプ：string
        ///項目検索タイプ
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は取得出来た座標になります。エラーの場合には座標0,0を返します
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string browser_get_coordinate {
            get {
                return ResourceManager.GetString("browser_get_coordinate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   browser_input関数
        ///Browserの指定項目に入力を行う
        ///
        ///構文
        ///int browser_input(string BrowserKeyName, string InputData, string Element, int SearchType)
        ///
        ///パラメタ
        ///BrowserKeyName
        ///タイプ：string
        ///browser_navigate関数で取得した戻り値
        ///
        ///InputData
        ///タイプ：string
        ///指定項目に入力を行いたいテキストデータ
        ///
        ///Element
        ///タイプ：string
        ///入力を行いたい項目名
        ///
        ///SearchType
        ///タイプ：string
        ///項目検索タイプ
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string browser_input {
            get {
                return ResourceManager.GetString("browser_input", resourceCulture);
            }
        }
        
        /// <summary>
        ///   browser_list関数
        ///Browserから開いた子Browserの一覧を取得する
        ///
        ///構文
        ///string[] browser_list(string BrowserKeyName)
        ///
        ///パラメタ
        ///BrowserKeyName
        ///タイプ：string
        ///browser_navigate関数で取得した戻り値
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は子Browser(配列)。エラーの場合にはNullになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string browser_list {
            get {
                return ResourceManager.GetString("browser_list", resourceCulture);
            }
        }
        
        /// <summary>
        ///   browser_navigate関数
        ///指定URLをBrowserで開く
        ///
        ///構文
        ///string browser_navigate(string URL, int Browser)
        ///
        ///パラメタ
        ///URL
        ///タイプ：string
        ///Browserで開きたいURL
        ///
        ///Browser
        ///タイプ：int
        ///開くBrowser
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は他のBrowser関数で使用するキーになります。エラーの場合には空になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string browser_navigate {
            get {
                return ResourceManager.GetString("browser_navigate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   browser_open_url関数
        ///指定URLをBrowserで開く
        ///
        ///構文
        ///int browser_open_url(string BrowserKeyName, string URL)
        ///
        ///パラメタ
        ///BrowserKeyName
        ///タイプ：string
        ///browser_navigate関数で取得した戻り値
        ///
        ///URL
        ///タイプ：string
        ///Browserで開きたいURL
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string browser_open_url {
            get {
                return ResourceManager.GetString("browser_open_url", resourceCulture);
            }
        }
        
        /// <summary>
        ///   browser_output関数
        ///Browserの指定項目より取得を行う
        ///
        ///構文
        ///string browser_output(string BrowserKeyName, string Element, int SearchType, string AttributeName)
        ///
        ///パラメタ
        ///BrowserKeyName
        ///タイプ：string
        ///browser_navigate関数で取得した戻り値
        ///
        ///Element
        ///タイプ：string
        ///出力を行いたい項目名
        ///
        ///SearchType
        ///タイプ：string
        ///項目検索タイプ
        ///
        ///AttributeName
        ///タイプ：string
        ///取得したい属性名
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は出力した値になります。エラーの場合には空白になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string browser_output {
            get {
                return ResourceManager.GetString("browser_output", resourceCulture);
            }
        }
        
        /// <summary>
        ///   browser_owner関数
        ///現在開かれているBrowserから親Browserを取得する
        ///
        ///構文
        ///string browser_owner(string BrowserKeyName)
        ///
        ///パラメタ
        ///BrowserKeyName
        ///タイプ：string
        ///browser_navigate関数で取得した戻り値
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は親Browser。エラーの場合には空白になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string browser_owner {
            get {
                return ResourceManager.GetString("browser_owner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   browser_quit関数
        ///Browserを破棄する
        ///
        ///構文
        ///bool browser_quit(string BrowserKeyName)
        ///
        ///パラメタ
        ///BrowserKeyName
        ///タイプ：string
        ///browser_navigate関数で取得した戻り値
        ///
        ///戻り値
        ///タイプ：bool
        ///関数が成功した場合、戻り値はtrueになります。エラーの場合にはfalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string browser_quit {
            get {
                return ResourceManager.GetString("browser_quit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   browser_select_box関数
        ///ListBoxより、指定項目がある場合選択状態にする
        ///
        ///構文
        ///bool browser_select_box(string BrowserKeyName, string Element, string Message,  int SearchType)
        ///
        ///パラメタ
        ///BrowserKeyName
        ///タイプ：string
        ///browser_navigate関数で取得した戻り値
        ///
        ///Element
        ///タイプ：string
        ///入力を行いたい項目名
        ///
        ///Message
        ///タイプ：string
        ///指定項目に入力を行いたいテキストデータ
        ///
        ///SearchType
        ///タイプ：string
        ///項目検索タイプ
        ///
        ///戻り値
        ///タイプ：Bool
        ///関数が成功した場合、戻り値はTrueになります。エラーの場合にはFalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string browser_select_box {
            get {
                return ResourceManager.GetString("browser_select_box", resourceCulture);
            }
        }
        
        /// <summary>
        ///   browser_wait関数
        ///Browserが使用可能な状態になるまで待つ
        ///
        ///構文
        ///int browser_wait(string BrowserKeyName, int TimeOut)
        ///
        ///パラメタ
        ///BrowserKeyName
        ///タイプ：string
        ///browser_navigate関数で取得した戻り値
        ///
        ///TimeOut
        ///タイプ：int
        ///最大待ち時間
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///ただし、TimeOut時間を設定し設定時間をオーバーした場合にのみ-1が戻ります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string browser_wait {
            get {
                return ResourceManager.GetString("browser_wait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   capture関数
        ///指定された画像フォーマットで画面をキャプチャする
        ///
        ///構文
        ///bool capture(string FileName, string ImageFormat)
        ///
        ///パラメタ
        ///FileName
        ///タイプ：string
        ///キャプチャ画面を保存したいファイル名
        ///
        ///ImageFormat
        ///タイプ：string
        ///キャプチャ画面を保存する画像フォーマット
        ///
        ///戻り値
        ///タイプ：bool
        ///関数が成功した場合、戻り値はtrueになります。エラーの場合にはfalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string capture {
            get {
                return ResourceManager.GetString("capture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   check_data関数
        ///指定された文字列より、正規表現で検索を行いヒットした文字列を取得する
        ///
        ///構文
        ///string check_data(string TextData, string Pattern)
        ///
        ///パラメタ
        ///TextData
        ///タイプ：string
        ///検索を行いたい文字列
        ///
        ///Pattern
        ///タイプ：string
        ///検索を行う正規表現
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値はヒットした文字列になります。エラーの場合には空文字になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string check_data {
            get {
                return ResourceManager.GetString("check_data", resourceCulture);
            }
        }
        
        /// <summary>
        ///   check_date関数
        ///入力された日付文字列が正しいかをチェックする
        ///
        ///構文
        ///bool check_date(string DateData)
        ///
        ///パラメタ
        ///DateData
        ///タイプ：string
        ///確認を行いたい日付文字列
        ///
        ///戻り値
        ///タイプ：bool
        ///日付文字列が正しい場合、戻り値はtrueになります。正しくない場合にはfalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string check_date {
            get {
                return ResourceManager.GetString("check_date", resourceCulture);
            }
        }
        
        /// <summary>
        ///   click関数
        ///項目を指定してマウス左ボタンのクリックを行います。
        ///
        ///構文
        ///bool click(string Handle, string SearchWord, int SearchType)
        ///
        ///パラメタ
        ///Handle
        ///タイプ：string
        ///クリックを行いたいWindowのHandle
        ///
        ///SearchWord
        ///タイプ：string
        ///クリックを行いたい項目名
        ///
        ///SearchType
        ///タイプ：int
        ///項目検索タイプ
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値はtrueになります。エラーの場合にはfalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string click {
            get {
                return ResourceManager.GetString("click", resourceCulture);
            }
        }
        
        /// <summary>
        ///   combine_path関数
        ///Path、FileNameを結合し絶対パスを作成する
        ///
        ///構文
        ///string combine_path(string Path, string FileName)
        ///
        ///パラメタ
        ///Path
        ///タイプ：string
        ///結合を行うPath
        ///
        ///FileName
        ///タイプ：string
        ///結合を行うFileName
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は結合した文字列になります。エラーの場合には空文字になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string combine_path {
            get {
                return ResourceManager.GetString("combine_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   date_add関数
        ///日付に対して加減算を行う
        ///
        ///構文
        ///string date_add(int Interval, int TimeInterval, string date)
        ///
        ///パラメタ
        ///Interval
        ///タイプ：int
        ///時間間隔
        ///
        ///TimeInterval
        ///タイプ：int
        ///加算時間間隔
        ///
        ///date
        ///タイプ：string
        ///加減算を行う日付
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は加減算を行った日付になります。エラーの場合には空文字になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string date_add {
            get {
                return ResourceManager.GetString("date_add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   direcotry_exists関数
        ///指定ディレクトリの存在を確認します。
        ///
        ///構文
        ///bool directory_exists(string DirectoryName)
        ///
        ///パラメタ
        ///DirectoryName
        ///タイプ：string
        ///存在を確認するDirectory名
        ///
        ///戻り値
        ///タイプ：bool
        ///指定したDirectoryが存在した場合、戻り値はTrueになります。それ以外の場合にはFalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string directory_exists {
            get {
                return ResourceManager.GetString("directory_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   excel_add_sheet関数
        ///Excelにシートを追加する
        ///
        ///構文
        ///bool excel_add_sheet(string ExcelKeyName, string SheetName)
        ///
        ///パラメタ
        ///ExcelKeyName
        ///タイプ：string
        ///ecxel_open関数で取得した戻り値
        ///
        ///SheetName
        ///タイプ：string
        ///追加するシート名
        ///
        ///戻り値
        ///タイプ：bool
        ///関数が成功した場合、戻り値はtrueになります。エラーの場合にはfalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string excel_add_sheet {
            get {
                return ResourceManager.GetString("excel_add_sheet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   excel_close関数
        ///Excelを閉じる
        ///
        ///構文
        ///bool excel_close(string ExcelKeyName, bool SaveFlg)
        ///
        ///パラメタ
        ///ExcelKeyName
        ///タイプ：string
        ///ecxel_open関数で取得した戻り値
        ///
        ///SaveFlg
        ///タイプ：bool
        ///終了時保存フラグ、省略時True
        ///
        ///戻り値
        ///タイプ：bool
        ///関数が成功した場合、戻り値はtrueになります。エラーの場合にはfalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string excel_close {
            get {
                return ResourceManager.GetString("excel_close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   excel_get_cell関数
        ///指定したシート及び座標から値を取得する
        ///
        ///構文
        ///string excel_get_cell(string ExcelKeyName, string SheetName, int CoordinateLine, int CoordinateColumn)
        ///
        ///パラメタ
        ///ExcelKeyName
        ///タイプ：string
        ///ecxel_open関数で取得した戻り値
        ///
        ///SheetName
        ///タイプ：string
        ///値を取得したいシート名
        ///
        ///CoordinateLine
        ///タイプ：int
        ///値を取得したい行
        ///
        ///CoordinateColumn
        ///タイプ：int
        ///値を取得したい列
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は取得したセル値になります。エラーの場合には空白になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string excel_get_cell {
            get {
                return ResourceManager.GetString("excel_get_cell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   excel_get_search_count関数
        ///excel_search関数でマッチした件数を返す
        ///
        ///構文
        ///int excel_get_search_count(string ExcelKeyName)
        ///
        ///パラメタ
        ///ExcelKeyName
        ///タイプ：string
        ///ecxel_open関数で取得した戻り値
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は検索でマッチした件数になります。エラーの場合には0になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string excel_get_search_count {
            get {
                return ResourceManager.GetString("excel_get_search_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   excel_get_search_result関数
        ///excel_search関数でマッチした情報を返す
        ///
        ///構文
        ///string[] excel_get_search_result(string ExcelKeyName, int Index)
        ///
        ///パラメタ
        ///ExcelKeyName
        ///タイプ：string
        ///ecxel_open関数で取得した戻り値
        ///
        ///Index
        ///タイプ：int
        ///取得Index
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は[シート名,行,列]になります。エラーの場合には空になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string excel_get_search_result {
            get {
                return ResourceManager.GetString("excel_get_search_result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   excel_open関数
        ///指定されたExcelファイルを開く
        ///
        ///構文
        ///string excel_open(string fileName, bool createNew)
        ///
        ///パラメタ
        ///fileName
        ///タイプ：string
        ///Excelファイル
        ///
        ///createNew
        ///タイプ：bool
        ///新規作成フラグ 省略時にはfalse
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は他のExcel関数で使用するキーになります。エラーの場合には空になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string excel_open {
            get {
                return ResourceManager.GetString("excel_open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   excel_remove_sheet関数
        ///Excelから指定のシートを削除する
        ///
        ///構文
        ///bool excel_remove_sheet(string ExcelKeyName, string SheetName)
        ///
        ///パラメタ
        ///ExcelKeyName
        ///タイプ：string
        ///ecxel_open関数で取得した戻り値
        ///
        ///SheetName
        ///タイプ：string
        ///シート名
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値はtrueになります。エラーの場合にはfalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string excel_remove_sheet {
            get {
                return ResourceManager.GetString("excel_remove_sheet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   excel_search関数
        ///シートから指定文字列を検索する
        ///
        ///構文
        ///int excel_search(string ExcelKeyName, string SearchWord, string SheetName)
        ///
        ///パラメタ
        ///ExcelKeyName
        ///タイプ：int
        ///ecxel_open関数で取得した戻り値
        ///
        ///SearchWord
        ///タイプ：int
        ///検索を行う値
        ///
        ///SheetName
        ///タイプ：int
        ///シート名 省略時には開いたExcelファイルの全シートが検索対象となります。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値はマッチした件数になります。エラーの場合には0になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string excel_search {
            get {
                return ResourceManager.GetString("excel_search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   excel_set_cell関数
        ///指定したシート及び座標に値を設定する
        ///
        ///構文
        ///string excel_get_cell(string ExcelKeyName, string SheetName, int CoordinateLine, int CoordinateColumn, string setValue)
        ///
        ///パラメタ
        ///ExcelKeyName
        ///タイプ：string
        ///ecxel_open関数で取得した戻り値
        ///
        ///SheetName
        ///タイプ：string
        ///値を設定したいシート名
        ///
        ///CoordinateLine
        ///タイプ：int
        ///値を設定したい行
        ///
        ///CoordinateColumn
        ///タイプ：int
        ///値を設定したい列
        ///
        ///setValue
        ///タイプ：string
        ///設定したい値
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値はtrueになります。エラーの場合にはfalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string excel_set_cell {
            get {
                return ResourceManager.GetString("excel_set_cell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   file_copy関数
        ///ファイルのコピーを行います。
        ///
        ///構文
        ///int file_copy(string sourceFileName, string destFileName)
        ///
        ///パラメタ
        ///sourceFileName
        ///タイプ：string
        ///コピー元ファイルパスを指定します。
        ///
        ///destFileName
        ///タイプ：string
        ///コピー先ファイルパスを指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string file_copy {
            get {
                return ResourceManager.GetString("file_copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   file_delete関数
        ///ファイルの削除を行います。
        ///
        ///構文
        ///int file_delete(string fileName)
        ///
        ///パラメタ
        ///fileName
        ///タイプ：string
        ///削除ファイルパスを指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string file_delete {
            get {
                return ResourceManager.GetString("file_delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   file_exists関数
        ///ファイルの存在確認を行います。
        ///
        ///構文
        ///int file_exists(string fileName)
        ///
        ///パラメタ
        ///fileName
        ///タイプ：string
        ///存在確認ファイルパスを指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///ファイルが存在した場合、戻り値はtrueになります。ファイルが存在しない場合、エラーの場合にはfalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string file_exists {
            get {
                return ResourceManager.GetString("file_exists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   file_move関数
        ///ファイルを移動します。
        ///
        ///構文
        ///bool file_move(string sourceFileName, string destFileName)
        ///
        ///パラメタ
        ///sourceFileName
        ///タイプ：string
        ///リネーム元ファイルパスを指定します。
        ///
        ///destFileName
        ///タイプ：string
        ///リネーム先ファイルパスを指定します。
        ///
        ///戻り値
        ///タイプ：bool
        ///関数が成功した場合、戻り値はTrueになります。それ以外の場合にはFalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string file_move {
            get {
                return ResourceManager.GetString("file_move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   file_rename関数
        ///ファイルの名称を変更します。
        ///
        ///構文
        ///int file_rename(string sourceFileName, string destFileName)
        ///
        ///パラメタ
        ///sourceFileName
        ///タイプ：string
        ///リネーム元ファイルパスを指定します。
        ///
        ///destFileName
        ///タイプ：string
        ///リネーム先ファイルパスを指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string file_rename {
            get {
                return ResourceManager.GetString("file_rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   folder_open関数
        ///指定FolderをExplorerで開く
        ///
        ///構文
        ///int folder_open(string PathName, int WindowStyle, int ExitsWait, int ExitsWaitTime)
        ///
        ///パラメタ
        ///PathName
        ///タイプ：string
        ///開きたいFolderへのパス
        ///
        ///WindowStyle
        ///タイプ：int
        ///起動時のWindowスタイルを指定
        ///
        ///ExitsWait
        ///タイプ：int
        ///アプリが終了するまで、待つかを指定
        ///
        ///ExitsWaitTime
        ///タイプ：int
        ///アプリが終了する待つ時間を指定
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string folder_open {
            get {
                return ResourceManager.GetString("folder_open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_acc_is_checked関数
        ///MicroSoft Accessibilityを使用し、指定座標下のPotionButton及び、CheckBoxの状態を取得する
        ///
        ///構文
        ///int get_acc_is_checked(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功しチェックされていた場合1を返しそれ以外は0を返す。エラーの場合には0以下になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_acc_is_checked {
            get {
                return ResourceManager.GetString("get_acc_is_checked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_acc_name関数
        ///MicroSoft Accessibilityを使用し、指定座標下のNameプロパティの値を取得する
        ///
        ///構文
        ///string get_acc_name(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は取得出来た値になります。エラーの場合には空白になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_acc_name {
            get {
                return ResourceManager.GetString("get_acc_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_acc_role関数
        ///MicroSoft Accessibilityを使用し、指定座標下のRoleプロパティの値を取得する
        ///
        ///構文
        ///int get_acc_role(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は取得出来た値になります。エラーの場合には0になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_acc_role {
            get {
                return ResourceManager.GetString("get_acc_role", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_acc_value関数
        ///MicroSoft Accessibilityを使用し、指定座標下のValueプロパティの値を取得する
        ///
        ///構文
        ///string get_acc_value(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は取得出来た値になります。エラーの場合には空になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_acc_value {
            get {
                return ResourceManager.GetString("get_acc_value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_current_path関数
        ///現在のカレントパスを取得します。
        ///
        ///構文
        ///string get_current_path()
        ///
        ///パラメタ
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は現在のカレントパスになります。エラーの場合には空文字になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_current_path {
            get {
                return ResourceManager.GetString("get_current_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_download_path関数
        ///Windowsで指定されているDownloadパスを返す
        ///
        ///構文
        ///string get_download_path()
        ///
        ///パラメタ
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は取得したDownLoadパスになります。エラーの場合には空文字になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_download_path {
            get {
                return ResourceManager.GetString("get_download_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_error_code関数
        ///直前の実行結果コードを返す
        ///
        ///構文
        ///int get_error_code()
        ///
        ///パラメタ
        ///
        ///戻り値
        ///タイプ：int
        ///戻り値は直前に実行された結果コードになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_error_code {
            get {
                return ResourceManager.GetString("get_error_code", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_error_message関数
        ///直前の実行結果メッセージを返す
        ///
        ///構文
        ///string get_error_message()
        ///
        ///パラメタ
        ///
        ///戻り値
        ///タイプ：string
        ///戻り値は直前に実行された結果メッセージになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_error_message {
            get {
                return ResourceManager.GetString("get_error_message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_file_name関数
        ///File名を含んだPathより、File名を抽出する
        ///
        ///構文
        ///string get_file_name(stirng FileName)
        ///
        ///パラメタ
        ///FileName
        ///タイプ：string
        ///File名を含んだPath
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は取得したFile名になります。エラーの場合には空文字になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_file_name {
            get {
                return ResourceManager.GetString("get_file_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_ime_status関数
        ///現時時点でのImeモードを取得します。
        ///
        ///構文
        ///int get_ime_status()
        ///
        ///パラメタ
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0もしくは1になります。エラーの場合には0もしくは1以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_ime_status {
            get {
                return ResourceManager.GetString("get_ime_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_parent_title関数名
        ///指定座標より、ハンドルを取得しウィンドウタイトルを取得する
        ///
        ///構文
        ///string get_parent_title(int X, int Y)
        ///
        ///パラメタ
        ///X
        ///タイプ：int
        ///タイトルを取得したいウィンドウ座標
        ///
        ///Y
        ///タイプ：int
        ///タイトルを取得したいウィンドウ座標
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は取得出来たWindowタイトルになります。エラーの場合には空白になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_parent_title {
            get {
                return ResourceManager.GetString("get_parent_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_reg_ex_count関数
        ///指定された文字列より、正規表現で検索を行いヒットした件数を取得する
        ///
        ///構文
        ///int get_reg_ex_count(string TextData, string Pattern, int Ignore)
        ///
        ///パラメタ
        ///TextData
        ///タイプ：string
        ///検索を行いたい文字列
        ///
        ///Pattern
        ///タイプ：string
        ///検索を行う正規表現
        ///
        ///Ignore
        ///タイプ：int
        ///小大文字比較対象
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値はヒットした件数になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_reg_ex_count {
            get {
                return ResourceManager.GetString("get_reg_ex_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_window_handle関数
        ///Class名、Windowタイトルがマッチしたアプリのハンドルを取得する
        ///
        ///構文
        ///long get_window_handle(string ClassName, string WindowTitle)
        ///
        ///パラメタ
        ///ClassName
        ///タイプ：string
        ///表示位置を指定したいアプリのClass名を指定
        ///
        ///WindowTitle
        ///タイプ：string
        ///表示位置を指定したいアプリのWindowタイトルを指定
        ///
        ///戻り値
        ///タイプ：Long
        ///関数が成功した場合、戻り値は取得出来たWindowハンドルになります。エラーの場合には0以下になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_window_handle {
            get {
                return ResourceManager.GetString("get_window_handle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_window_handle_parent関数
        ///指定されたWindowハンドルより、親のWindowハンドルを取得する
        ///
        ///構文
        ///long get_window_handle_parent(long WindowHandle)
        ///
        ///パラメタ
        ///WindowHandle
        ///タイプ：long
        ///Windowタイトルを取得したいアプリのハンドル
        ///
        ///戻り値
        ///タイプ：long
        ///関数が成功した場合、戻り値は取得出来たWindowハンドルになります。エラーの場合には0になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_window_handle_parent {
            get {
                return ResourceManager.GetString("get_window_handle_parent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_window_handle_point関数
        ///現在のマウス座標下のWindowハンドルを取得する
        ///
        ///構文
        ///long get_window_handle_point()
        ///
        ///パラメタ
        ///
        ///戻り値
        ///タイプ：long
        ///関数が成功した場合、戻り値は取得出来たWindowハンドルになります。エラーの場合には0になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_window_handle_point {
            get {
                return ResourceManager.GetString("get_window_handle_point", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_window_text関数
        ///指定アプリのWindowタイトルを取得する
        ///
        ///構文
        ///string get_window_text(long WindowHandle)
        ///
        ///パラメタ
        ///WindowHandle
        ///タイプ：long
        ///Windowタイトルを取得したいアプリのハンドル
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は取得出来たWindowタイトルになります。エラーの場合には空白になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_window_text {
            get {
                return ResourceManager.GetString("get_window_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   get_windows_version関数
        ///現在実行中のWindowsのバージョンを取得する
        ///
        ///構文
        ///string get_windows_version()
        ///
        ///パラメタ
        ///
        ///戻り値
        ///関数が成功した場合、現在実行中のWindowsのバージョンを取得する。
        ///関数が失敗した場合、空文字が返される
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string get_windows_version {
            get {
                return ResourceManager.GetString("get_windows_version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   global_variable関数
        ///外部からのデータ引き渡しを行う
        ///
        ///構文
        ///string global_variable(string VariableName)
        ///
        ///パラメタ
        ///VariableName
        ///タイプ：string
        ///変数名
        ///
        ///戻り値
        ///関数が成功した場合、設定されている値を取得。
        ///関数が失敗した場合、空文字が返される
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string global_variable {
            get {
                return ResourceManager.GetString("global_variable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   image_match関数
        ///プライマリー画面と指定されたテンプレートファイルとがマッチする座標を返す
        ///
        ///構文
        ///int[] image_match(string TemplateFilePath, double Threshold, int TimeOut, int StrtX, int StartY, int EndX, int EndY, bool grayScaleMode, bool matchPositionMode)
        ///
        ///パラメタ
        ///TemplateFilePath
        ///タイプ：string
        ///マッチしたい画像ファイル
        ///
        ///Threashold
        ///タイプ：int
        ///対象との閾値
        ///
        ///TimeOut
        ///タイプ：int
        ///検索処理タイムアウト時間
        ///
        ///StartX
        ///タイプ：int
        ///検索領域の開始X座標
        ///
        ///StartY
        ///タイプ：int
        ///検索領域の開始Y座標
        ///
        ///EndX
        ///タイプ：int
        ///検索領域の終了X座標
        ///
        ///EndY
        ///タイプ：int
        ///検索領域の終了Y座標
        ///
        ///Threashold
        ///タイプ：int
        ///対象との閾値
        ///
        ///grayScaleMode
        ///タイプ：bo [残りの文字列は切り詰められました]&quot;; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string image_match {
            get {
                return ResourceManager.GetString("image_match", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Include関数
        ///外部からのデータ引き渡しを行う
        ///
        ///構文
        ///include &quot;FileName&quot;
        ///
        ///パラメタ
        ///FileName
        ///タイプ：string
        ///
        ///戻り値
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string Include {
            get {
                return ResourceManager.GetString("Include", resourceCulture);
            }
        }
        
        /// <summary>
        ///   init_file関数
        ///指定されたファイルの初期化を行う。
        ///
        ///構文
        ///int init_file(string FilePath)
        ///
        ///パラメタ
        ///FilePath
        ///タイプ：string
        ///初期化を行いたいファイルパスを指定する。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string init_file {
            get {
                return ResourceManager.GetString("init_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   input_box関数
        ///入力出来るダイアログを表示する
        ///
        ///構文
        ///string input_box(string Prompt)
        ///
        ///パラメタ
        ///Prompt
        ///タイプ：string
        ///入力ダイアログに表示するプロンプトを指定します。
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は入力された値になります。エラーの場合には空白になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string input_box {
            get {
                return ResourceManager.GetString("input_box", resourceCulture);
            }
        }
        
        /// <summary>
        ///   input_keys関数
        ///フォーカスを持っている入力コントロールに1文字づつ入力を行う
        ///
        ///構文
        ///int input_keys(string TextData, int waitTime)
        ///
        ///パラメタ
        ///TextData
        ///タイプ：string
        ///入力テキストデータを指定します。
        ///
        ///waitTime
        ///タイプ：int
        ///文字入力時間隔を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string input_keys {
            get {
                return ResourceManager.GetString("input_keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   input_text_box関数
        ///項目名を指定し入力を行う
        ///
        ///構文
        ///bool input_text_box(string Handle, string SearchWord, string Message, int SearchType)
        ///
        ///パラメタ
        ///Handle
        ///タイプ：string
        ///入力を行いたいWindowのHandle
        ///
        ///SearchWord
        ///タイプ：string
        ///入力を行いたい項目名
        ///
        ///Message
        ///タイプ：string
        ///入力テキストデータを指定します。
        ///
        ///SearchType
        ///タイプ：int
        ///項目検索タイプ
        ///
        ///戻り値
        ///タイプ：bool
        ///関数が成功した場合、戻り値はtrueになります。エラーの場合にはfalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string input_text_box {
            get {
                return ResourceManager.GetString("input_text_box", resourceCulture);
            }
        }
        
        /// <summary>
        ///   left_click関数
        ///マウス左ボタンのクリックを行います。
        ///
        ///構文
        ///int left_click(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string left_click {
            get {
                return ResourceManager.GetString("left_click", resourceCulture);
            }
        }
        
        /// <summary>
        ///   left_double_click関数
        ///マウス左ボタンのダブルクリックを行います。
        ///
        ///構文
        ///int left_double_click(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string left_double_click {
            get {
                return ResourceManager.GetString("left_double_click", resourceCulture);
            }
        }
        
        /// <summary>
        ///   left_down関数
        ///マウス左ボタンを押す
        ///
        ///構文
        ///int left_down(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string left_down {
            get {
                return ResourceManager.GetString("left_down", resourceCulture);
            }
        }
        
        /// <summary>
        ///   left_up関数
        ///マウス左ボタンを離す
        ///
        ///構文
        ///int left_up(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string left_up {
            get {
                return ResourceManager.GetString("left_up", resourceCulture);
            }
        }
        
        /// <summary>
        ///   logger関数
        ///ログメッセージ出力（ファイル、メール、SNMP）
        ///
        ///構文
        ///int logger(int OutputType, string Message, string AttachedFile)
        ///
        ///パラメタ
        ///Message
        ///タイプ：string
        ///出力するメッセージ
        ///
        ///OutputType
        ///タイプ：int
        ///出力先の指定（下記参照）省略可
        ///
        ///
        ///AttachedFile
        ///タイプ：string
        ///添付ファイル（下記参照）省略可
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string logger {
            get {
                return ResourceManager.GetString("logger", resourceCulture);
            }
        }
        
        /// <summary>
        ///   message_box関数
        ///メッセージボックスを表示する
        ///
        ///構文
        ///int message_box(string Message, int ButtonType, int IconType)
        ///
        ///パラメタ
        ///Message
        ///タイプ：string
        ///メッセージボックスに表示させたい文言を指定します。
        ///
        ///ButtonType
        ///タイプ：int
        ///メッセージボックスに表示させたいボタンタイプを指定します。
        ///
        ///IconType
        ///タイプ：int
        ///メッセージボックスに表示させたいアイコンタイプを指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は押下されたボタンの数値になります。エラーの場合にはマイナスの値になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string message_box {
            get {
                return ResourceManager.GetString("message_box", resourceCulture);
            }
        }
        
        /// <summary>
        ///   middle_click関数
        ///マウス中ボタンのクリックを行います。
        ///
        ///構文
        ///int middle_click(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string middle_click {
            get {
                return ResourceManager.GetString("middle_click", resourceCulture);
            }
        }
        
        /// <summary>
        ///   middle_double_click関数
        ///マウス中ボタンのダブルクリックを行います。
        ///
        ///構文
        ///int middle_double_click(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string middle_double_click {
            get {
                return ResourceManager.GetString("middle_double_click", resourceCulture);
            }
        }
        
        /// <summary>
        ///   middle_down関数
        ///マウス中ボタンを押す
        ///
        ///構文
        ///int middle_down(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string middle_down {
            get {
                return ResourceManager.GetString("middle_down", resourceCulture);
            }
        }
        
        /// <summary>
        ///   middle_up関数
        ///マウス中ボタンを離す
        ///
        ///構文
        ///int middle_up(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string middle_up {
            get {
                return ResourceManager.GetString("middle_up", resourceCulture);
            }
        }
        
        /// <summary>
        ///   move関数
        ///マウスカーソルの移動を行います。
        ///
        ///構文
        ///int move(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string move {
            get {
                return ResourceManager.GetString("move", resourceCulture);
            }
        }
        
        /// <summary>
        ///   now関数
        ///指定されたフォーマットで現日時を取得する
        ///
        ///構文
        ///string now(string Format)
        ///
        ///パラメタ
        ///Format
        ///タイプ：String
        ///日付のフォーマット文字列、省略された場合は&quot;yyyy/MM/dd HH:mm:ss&quot;が使用される。
        ///
        ///戻り値
        ///
        ///タイプ：String
        ///関数が成功した場合、戻り値は引数で整形された現日時です。
        ///関数が失敗した場合、空文字が返されます。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string now {
            get {
                return ResourceManager.GetString("now", resourceCulture);
            }
        }
        
        /// <summary>
        ///   output_text_box関数
        ///項目名を指定し出力を行う
        ///
        ///構文
        ///bool output_text_box(string Handle, string SearchWord, int SearchType)
        ///
        ///パラメタ
        ///Handle
        ///タイプ：string
        ///出力を行いたいWindowのHandle
        ///
        ///SearchWord
        ///タイプ：string
        ///出力を行いたい項目名
        ///
        ///SearchType
        ///タイプ：int
        ///項目検索タイプ
        ///
        ///戻り値
        ///タイプ：bool
        ///関数が成功した場合、戻り値はマッチした項目の内容になります。エラーの場合には空白になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string output_text_box {
            get {
                return ResourceManager.GetString("output_text_box", resourceCulture);
            }
        }
        
        /// <summary>
        ///   read_file関数
        ///指定ファイルよりテキストを読み込みます。
        ///
        ///構文
        ///int read_file(string FileName, string Encoding)
        ///
        ///パラメタ
        ///FileName
        ///タイプ：string
        ///読み込みを行うファイルパスを指定します。
        ///
        ///Encoding
        ///タイプ：string
        ///書き込みを行う文字コードをしています。
        ///指定出来る文字コードは、UniCode、UTF-16、UTF-8、Shift_Jis、euc-jp、iso-2022-jpです。
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は取得したテキストデータになります。エラーの場合には空文字になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string read_file {
            get {
                return ResourceManager.GetString("read_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   read_xml関数
        ///外部からxmlファイルを介しデータ引き渡しを行う
        ///
        ///構文
        ///string read_xml(string XmlName, string ElementName)
        ///
        ///パラメタ
        ///XmlName
        ///タイプ：string
        ///データを取り込みたいXmlファイル名
        ///
        ///ElementName
        ///タイプ：string
        ///データを保管してる要素名
        ///
        ///戻り値
        ///関数が成功した場合、設定されている値を取得。
        ///関数が失敗した場合、空文字が返される
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string read_xml {
            get {
                return ResourceManager.GetString("read_xml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   right_click関数
        ///マウス右ボタンのクリックを行います。
        ///
        ///構文
        ///int right_click(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string right_click {
            get {
                return ResourceManager.GetString("right_click", resourceCulture);
            }
        }
        
        /// <summary>
        ///   right_double_click関数
        ///マウス右ボタンのダブルクリックを行います。
        ///
        ///構文
        ///int right_double_click(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string right_double_click {
            get {
                return ResourceManager.GetString("right_double_click", resourceCulture);
            }
        }
        
        /// <summary>
        ///   right_down関数
        ///マウス右ボタンを押す
        ///
        ///構文
        ///int right_down(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string right_down {
            get {
                return ResourceManager.GetString("right_down", resourceCulture);
            }
        }
        
        /// <summary>
        ///   right_up関数
        ///マウス右ボタンを離す
        ///
        ///構文
        ///int right_up(int x, int y)
        ///
        ///パラメタ
        ///x
        ///タイプ：int
        ///マウスカーソルのX座標を指定します。
        ///
        ///y
        ///タイプ：int
        ///マウスカーソルのY座標を指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string right_up {
            get {
                return ResourceManager.GetString("right_up", resourceCulture);
            }
        }
        
        /// <summary>
        ///   search_file関数
        ///指定Pathより、指定Fileを検索し発見したFile名を返します。
        ///
        ///構文
        ///string[] search_file(string PathName, string FileName)
        ///
        ///パラメタ
        ///PathName
        ///タイプ：string
        ///書き込みを行うファイルパスを指定します。
        ///
        ///FileName
        ///タイプ：string
        ///書き込みを行うテキスト指定します。
        ///
        ///戻り値
        ///タイプ：string
        ///関数が成功した場合、戻り値は発見したFile名(配列)になります。エラーの場合にはnillになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string search_file {
            get {
                return ResourceManager.GetString("search_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   send_keys関数
        ///アクティブなフォームに対し、キー情報を送信する
        ///
        ///構文
        ///int send_keys(string SendData)
        ///
        ///パラメタ
        ///SendData
        ///タイプ：string
        ///送信キーデータを指定します。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string send_keys {
            get {
                return ResourceManager.GetString("send_keys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   set_current_path関数
        ///カレントパスを変更します。
        ///
        ///構文
        ///bool set_current_path(string currentPath)
        ///
        ///パラメタ
        ///currentPath
        ///タイプ：string
        ///カレントパスを指定します。
        ///
        ///戻り値
        ///タイプ：bool
        ///関数が成功した場合、戻り値はTrueになります。エラーの場合にはFalseになります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string set_current_path {
            get {
                return ResourceManager.GetString("set_current_path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   set_ime_status関数
        ///Imeを指定されたモードに設定する
        ///
        ///構文
        ///void set_time_status(int ImeMode)
        ///
        ///パラメタ
        ///ImeMode
        ///タイプ：int
        ///設定したいImeモードを指定する
        ///
        ///戻り値
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string set_ime_status {
            get {
                return ResourceManager.GetString("set_ime_status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   set_window_pos_z関数
        ///指定アプリのZ-Orderの変更を行う
        ///
        ///構文
        ///int set_window_pos_z(long WindowHandle, int Z-Order)
        ///
        ///パラメタ
        ///WindowHandle
        ///タイプ：long
        ///Z-Orderを変更したいアプリのハンドル
        ///
        ///Z-Order
        ///タイプ：int
        ///指定したいZ-Order
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string set_window_pos_z {
            get {
                return ResourceManager.GetString("set_window_pos_z", resourceCulture);
            }
        }
        
        /// <summary>
        ///   to_int関数
        ///数字を数値へ変換する
        ///
        ///構文
        ///int to_int(string StringValue)
        ///
        ///パラメタ
        ///StringValue
        ///タイプ：string
        ///変換を行いたい数字
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は変換後の数値になります。エラーの場合には0になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string to_int {
            get {
                return ResourceManager.GetString("to_int", resourceCulture);
            }
        }
        
        /// <summary>
        ///   wait関数
        ///指定時間待つ
        ///
        ///構文
        ///int wait(int SleepTime)
        ///
        ///パラメタ
        ///SleepTime
        ///タイプ：int
        ///待つ時間を指定する
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string wait {
            get {
                return ResourceManager.GetString("wait", resourceCulture);
            }
        }
        
        /// <summary>
        ///   write_file関数
        ///指定ファイルにテキストを書き込みます。
        ///
        ///構文
        ///int write_file(string FileName, string TextData,string Encoding)
        ///
        ///パラメタ
        ///FileName
        ///タイプ：string
        ///書き込みを行うファイルパスを指定します。
        ///
        ///TextData
        ///タイプ：string
        ///書き込みを行うテキスト指定します。
        ///
        ///Encoding
        ///タイプ：string
        ///書き込みを行う文字コードをしています。
        ///指定出来る文字コードは、UniCode、UTF-16、UTF-8、Shift_Jis、euc-jp、iso-2022-jpです。
        ///
        ///戻り値
        ///タイプ：int
        ///関数が成功した場合、戻り値は0になります。エラーの場合には0以外になります。
        ///
        ///
        /// に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string write_file {
            get {
                return ResourceManager.GetString("write_file", resourceCulture);
            }
        }
    }
}
